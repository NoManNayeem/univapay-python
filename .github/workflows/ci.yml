name: CI

on:
  push:
    branches: ["**"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e .[dev]

      - name: Lint (ruff)
        run: |
          python -m ruff --version
          # Limit to library code to avoid failing on example scripts
          python -m ruff check univapay

      - name: Type-check (mypy)
        run: |
          python -m mypy --version
          python -m mypy univapay

      - name: Run tests (pytest)
        run: |
          python -m pytest -q

  docs:
    name: Docs build
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            mkdocs.yml

      - name: Install docs deps
        run: |
          python -m pip install -U pip
          python -m pip install -e .
          python -m pip install mkdocs mkdocs-material "mkdocstrings[python]"

      - name: Build docs
        run: |
          mkdocs build --strict

  build:
    name: Package build
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            pyproject.toml

      - name: Build and check
        run: |
          python -m pip install -U pip
          python -m pip install build twine
          python -m build
          python -m twine check dist/*

